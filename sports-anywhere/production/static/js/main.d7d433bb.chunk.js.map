{"version":3,"sources":["components/nav/index.js","components/footer/index.js","components/notFound/index.js","components/card/index.js","config/constants/actionTypes.js","config/reducer/productReducer.js","config/productContext.js","containers/productList/index.js","containers/productDetails/productSchema.js","containers/productDetails/index.js","App.js","serviceWorker.js","index.js","config/intl/message.js","assets/logo.svg"],"names":["Nav","logo","title","className","Link","to","IconButton","aria-label","src","alt","Typography","variant","defaultProps","React","memo","children","gutterBottom","component","id","desc","price","date","Card","CardActionArea","CardContent","color","LIST_ALL","ProductReducer","state","action","type","add_state","Object","values","push","payload","localStorage","setItem","JSON","stringify","assign","edited_state","map","product","name","description","inventoryDate","Types","search_state","filter","toLowerCase","indexOf","ProductContext","createContext","localState","parse","getItem","useContext","dispatch","InputBase","placeholder","inputProps","onChange","e","target","value","key","yesterday","Date","setDate","getDate","productSchema","Yup","shape","min","max","required","moreThan","props","params","URLSearchParams","location","search","currentProductID","get","mode","useState","editableForm","setEditableForm","currentProduct","potentialID","length","initialValues","onClick","validationSchema","onSubmit","history","toString","htmlFor","disabled","rows","cols","App","useEffect","products","Switch","Route","exact","path","ProductList","ProductDetails","NotFound","Boolean","window","hostname","match","ReactDOM","render","locale","messages","footer","formBtn","editBtn","back","add","useReducer","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d7d433bb.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\n\nimport './nav.scss';\n\nconst Nav = ({logo, title}) => (\n    <header className=\"nav\">\n        <Link to=\"/\">\n            <IconButton aria-label=\"menu\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <Typography variant=\"h6\">\n                {title}\n                </Typography>\n            </IconButton>\n        </Link>\n    </header>\n);\n\nNav.propTypes = {\n    logo: PropTypes.string,\n    title: PropTypes.string.isRequired,\n}\n\n\nNav.defaultProps = {\n    logo: '',\n}\n\n  export default React.memo(Nav);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './footer.scss';\n\nconst Footer = ({children}) => (\n    <footer>\n        <p>\n            { children }\n        </p>\n    </footer>\n);\n\nFooter.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default React.memo(Footer);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport './not-found.scss';\n\nexport default () => {\n    return (\n        <div className=\"not-found\">\n          <Typography gutterBottom variant=\"h1\" component=\"h1\">\n            Sorry, canâ€™t find that.\n          </Typography>\n        </div>\n    );\n  }","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nimport './card.scss';\n\nexport const ProductCard = ({\n  id,\n  title,\n  desc,\n  price,\n  date\n}) => (<Card className=\"card\">\n  <div className=\"card_link\">\n    <Link to={`/details?id=${id}&mode=edit`}>\n      Edit\n    </Link>\n  </div>\n  <Link to={`/details?id=${id}`}>\n    <CardActionArea>\n      <CardContent>\n        <Typography gutterBottom variant=\"h4\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {desc}\n        </Typography>\n      </CardContent>\n    </CardActionArea>\n  </Link>\n  <div className=\"card_footer\">\n    <Typography gutterBottom variant=\"h5\" component=\"h3\">\n      {`$${price}`}\n    </Typography>\n    <Typography gutterBottom component=\"p\">\n      Date: {date}\n    </Typography>\n  </div>\n</Card>);\n\nProductCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n}\n\nexport default React.memo(ProductCard)","export const RESET = 'REST';\nexport const RECEIVE = 'RECEIVE';\n\nexport const ADD_PRODUCT = 'REQUEST_CART';\nexport const SEARCH_PRODUCT = 'SEARCH_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\nexport const LIST_ALL = 'LIST_ALL_PRODUCTS';\n","import * as Types from '../constants/actionTypes';\n\nconst ProductReducer = (state, action) => {\n    switch (action.type) {\n        default:\n        case Types.RESET:\n            return {};\n        case Types.ADD_PRODUCT:\n            let add_state = Object.values(state);\n            add_state.push(action.payload);\n            localStorage.setItem(\"products\", JSON.stringify(add_state))\n            return Object.assign({}, add_state);\n        case Types.UPDATE_PRODUCT:\n            let edited_state = Object.values(state).map((product) => {\n                if(product.id === action.payload.id){\n                    product.name = action.payload.name;\n                    product.description = action.payload.description;\n                    product.price = action.payload.price;\n                    product.inventoryDate = action.payload.inventoryDate;\n                }\n                return product;\n            })\n            localStorage.setItem(\"products\", JSON.stringify(edited_state))\n            return Object.assign({}, edited_state);\n        case  Types.LIST_ALL:\n            return Object.assign({}, state, action.payload)\n        case Types.SEARCH_PRODUCT:\n            let search_state = state;\n            if(action.payload) {\n                search_state = Object.values(state).filter((product) => {\n                    return product.name.toLowerCase().indexOf(action.payload.toLowerCase()) !== -1;\n                })\n            }\n            return Object.assign({}, search_state);\n    }\n};\n\nexport default ProductReducer ","import React from \"react\";\nimport ProductReducer from \"./reducer/productReducer\";\n\nconst ProductContext = React.createContext();\n\nconst ProductContextProvider = (props) => {\n    let [state, dispatch] = React.useReducer(ProductReducer, {});\n    let value = { state, dispatch };\n\n    return (\n        <ProductContext.Provider value={value}>{props.children}</ProductContext.Provider>\n    );\n}\n\nexport { ProductContext, ProductContextProvider };","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from 'react-intl';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n// Styles\nimport './product-list.scss';\n// Components\nimport Card from '../../components/card';\n// Config\nimport * as Types from '../../config/constants/actionTypes';\nimport { ProductContext } from '../../config/productContext';\n\nconst localState = JSON.parse(localStorage.getItem(\"products\"));\n\nexport default () => {\n  const { state, dispatch } = useContext(ProductContext);\n \n  const onChangeHandler = (e) => {\n    if(e.target.value){\n      dispatch({ type: Types.SEARCH_PRODUCT, payload: e.target.value });\n    } else {\n      dispatch({ type: Types.LIST_ALL, payload: localState });\n    }\n  }\n\n  return (\n      <div className=\"product-list\">\n        <div className=\"product-list_nav\">\n          <Link className=\"btn btn--primary btn--mini\" to=\"/details?mode=edit\">\n            <FormattedMessage id=\"add\" />\n          </Link>\n          <div className=\"product-list_search\">\n            <div className=\"product-list_search_icon\">\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Searchâ€¦\"\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={ onChangeHandler }\n            />\n          </div>\n        </div>\n        <div className=\"product-list_container\">\n          {\n            state && Object.values(state).map(({\n              id,\n              name,\n              description,\n              price,\n              inventoryDate\n            }) => {\n              return <Card key={id} id={id} title={name} desc={description} price={price} date={inventoryDate} />\n            })\n          }\n        </div>\n      </div>  \n  );\n}\n","import * as Yup from 'yup';\n\nconst yesterday = new Date()\nyesterday.setDate((yesterday.getDate()-1))\n\nconst productSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n    description: Yup.string()\n    .min(2, 'Too Short!')\n    .max(500, 'Too Long!')\n    .required('Required'),\n    price: Yup.number()\n    .moreThan(0, 'Should be more than 0')\n    .required('Required'),\n    inventoryDate: Yup.date()\n    .min(new Date(yesterday), 'Cannot add date in the past')\n    .required('Required'),\n});\n\nexport default productSchema;","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { FormattedMessage } from 'react-intl';\n// Styles\nimport './product-details.scss';\n// Config\nimport { ProductContext } from '../../config/productContext';\nimport * as Types from '../../config/constants/actionTypes';\nimport productSchema from './productSchema';\n\n\nexport default (props) => {\n  const localState = JSON.parse(localStorage.getItem(\"products\"));\n  const params = new URLSearchParams(props.location.search);\n  const currentProductID = params.get('id');\n  const mode = params.get('mode');\n  const [editableForm, setEditableForm] = useState(mode === 'edit' ? false : true);\n  const { state, dispatch } = useContext(ProductContext);\n\n  const currentProduct = (localState || Object.values(state)).filter((product) => {\n    return product.id === currentProductID;\n  });\n  \n  const potentialID = localState.length + 1;\n  const initialValues = currentProduct.length ? {\n                          name: currentProduct[0].name,\n                          description: currentProduct[0].description,\n                          price: currentProduct[0].price,\n                          inventoryDate: currentProduct[0].inventoryDate\n                        } \n                        : { name: '', description: '', price: '', inventoryDate: '' }  \n  return (\n      <div className=\"product-details\">\n        <div className=\"product-details_nav\">\n          <Link className=\"btn btn--primary\" to=\"/\">\n            <FormattedMessage id=\"back\" />\n          </Link>\n          { currentProductID && \n            <button className=\"btn btn--secondary\" onClick={() => {\n              setEditableForm(!editableForm);\n            }}>\n              <FormattedMessage id=\"editBtn\" />\n            </button>\n          }\n        </div>\n        <Formik\n          initialValues={ initialValues }\n          validationSchema={ productSchema }\n          onSubmit={(values) => {\n            if(currentProductID) {\n              dispatch({ type: Types.UPDATE_PRODUCT, payload: {\n                id: currentProductID,\n                name: values.name,\n                description: values.description,\n                price: values.price,\n                inventoryDate: values.inventoryDate\n              } });\n              props.history.push('/');\n            } else {\n              dispatch({ type: Types.ADD_PRODUCT, payload: {\n                id: potentialID.toString(),\n                name: values.name,\n                description: values.description,\n                price: values.price,\n                inventoryDate: values.inventoryDate\n              } });\n              props.history.push('/');\n            }\n          }}\n        >\n           <Form>\n             <div className=\"styled-field\">\n                <label htmlFor=\"name\">\n                  <FormattedMessage id=\"name\" />\n                </label>\n                <Field type=\"text\" name=\"name\" disabled={editableForm} />\n                <ErrorMessage name=\"name\" component=\"div\" className=\"field-errors\" />\n             </div>\n             <div className=\"styled-field\">\n                <label htmlFor=\"name\">\n                  <FormattedMessage id=\"desc\" />\n                </label>\n                <Field component=\"textarea\" rows=\"10\" cols=\"50\" name=\"description\" disabled={editableForm} />\n                <ErrorMessage name=\"description\" component=\"div\" className=\"field-errors\" />\n              </div>\n              <div className=\"styled-field\">\n                <label htmlFor=\"name\">\n                  <FormattedMessage id=\"price\" />\n                </label>\n                <Field type=\"text\" name=\"price\" disabled={editableForm} />\n                <ErrorMessage name=\"price\" component=\"div\" className=\"field-errors\" />\n              </div>\n              <div className=\"styled-field\">\n                <label htmlFor=\"name\">\n                  <FormattedMessage id=\"date\" />\n                </label>\n                <Field type=\"date\" name=\"inventoryDate\" disabled={editableForm} />\n                <ErrorMessage name=\"inventoryDate\" component=\"div\" className=\"field-errors\" />\n              </div>\n              <button type=\"submit\" className=\"btn btn--document\" disabled={editableForm}>\n                <FormattedMessage id=\"formBtn\" />\n              </button>\n            </Form>\n        </Formik>\n      </div>  \n  );\n}\n\n","import React, { useEffect, useContext }  from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { FormattedMessage } from 'react-intl';\n// Styles and Assets\nimport logo from './assets/logo.svg';\nimport './App.scss';\n// Components\nimport Nav from './components/nav';\nimport Footer from './components/footer';\nimport NotFound from './components/notFound';\n// Containers\nimport ProductList from './containers/productList';\nimport ProductDetails from './containers/productDetails';\n// Config\nimport * as Types from './config/constants/actionTypes';\nimport { ProductContext } from './config/productContext';\nimport { products } from './config/data.json';\n\nfunction App() {\n  const { dispatch } = useContext(ProductContext);\n  \n\n  useEffect(\n    () => {\n      const localState = JSON.parse(localStorage.getItem(\"products\"));\n      dispatch({ type: Types.LIST_ALL, payload: localState || products });\n      if(!localState) {\n        localStorage.setItem(\"products\", JSON.stringify(products))\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav logo={logo} title={\n          <FormattedMessage id=\"title\" />\n        } />\n        <div className=\"main\">\n          <Switch>\n            <Route exact path=\"/\" component={ProductList} />\n            <Route exact path=\"/details\" component={ProductDetails} />\n            <Route exact component={NotFound} />\n          </Switch>\n        </div>\n        <Footer>\n          <FormattedMessage id=\"footer\" />\n        </Footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\n\nimport './index.css';\n\nimport App from './App';\n\nimport Message from './config/intl/message';\nimport * as serviceWorker from './serviceWorker';\n\n// Config\nimport { ProductContextProvider } from './config/productContext';\n\nReactDOM.render(\n    <IntlProvider locale=\"en\" messages={Message}>\n        <ProductContextProvider>\n            <App />\n        </ProductContextProvider>\n    </IntlProvider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n    title: 'Sports Anywhere',\n    footer: 'Copyright Â© Fareez Ahmed 2014',\n    name: 'Product Name',\n    desc: 'Description',\n    price: 'Price',\n    date: 'Inventory Date',\n    formBtn: 'Submit',\n    editBtn: 'Edit Product',\n    back: 'Back',\n    add: 'Add Product',\n};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}